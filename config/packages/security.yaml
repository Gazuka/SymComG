security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt
        App\Entity\ROLEADMIN:
            algorithm: auto


    providers:
        users_in_memory: { memory: null }
        users_in_database:
            entity:
                class: App\Entity\Utilisateur
                property: pseudo
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\ROLEADMIN
                property: jcarion
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        admin:
            pattern: ^/admin
            lazy: true
            provider: users_in_database
            form_login: 
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin_accueil
            logout:
                path: admin_logout
                target: admin_accueil
        # main:
        #     pattern: ^/
        #     lazy : true
        #     provider: users_in_database
        #     form_login: 
        #         login_path: site_login
        #         check_path: site_login
        #         default_target_path: site_accueil
        #     logout:
        #         path: site_logout
        #         target: site_accueil
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/site/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_TESTEUR }
        # - { path: ^/profile, roles: ROLE_USER }